<-Widgets->
--> S√£o componentes que podemos colocar no nosso Layout üëç 
    :https://flutter.dev/docs/development/ui/widgets-intro
--> Para contruir uma tela vc ir√° construir uma arvore de widgets;

->MAterial Designer->
--> √â uma metodologia criada pela google, pensada para ser simples, intuitiva etc..
    https://material.io/design/introduction
--> Utiliza regras de como deve se coportar um Layout, Como deve ser estrutura de tamanhos , Principios etc

--> Come√ßando Projeto do Zero <--
1-> criar projeto flutter;
2-> Excluir todo o codido do main para come√ßar do zero;
3-> Ir na pasta teste e deletar o widget_test;
<-main.dart->

    //todo projeto dart deve inicializar com a fun√ß√£o main
    //dentro do main devemos falar qual app vamos rodar(utilizando a fun√ßao runApp que precisa das bibliotecas/pacotes "flutter/material.dart"
    //especificamos um material app
    //podemos informamos um titulo para app
    //-->Temos que especificar a tela inicial da nossa  APp informando no parAMETRO home

    import 'package:flutter/material.dart';

    void main(){
    runApp(MaterialApp(
        title: "Contador de Pessoas",
        home:Container(color: Colors.white,)
    ));
    }
--> Criando Colunas e textos <--
Column √© um tipo de widget que permite colar outros widths(eles se alinham na vertical e um encima do outro )
1-> Passo os widget para o column pelo children(ou seja informo que eles s√£o componenetes filhos)
2-> O main deve ficar:
import 'package:flutter/material.dart';

void main(){
  runApp(MaterialApp(
      title: "Contador de Pessoas",
      home:Column(
        children: <Widget>[
        Text("Pessoa:0")
      ],
      )
  ));
}
3-> Agora vamos passar um estilo para nosso componente
import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
      title: "Contador de Pessoas",
      home: Column(
        children: <Widget>[
          Text(
            "Pessoa:0",
            style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
          )
        ],
      )));
}
4-> Para formatar em bom estado nos podemos usar atalho de reformatar cod crt+alt+l ou podemos fazer isso manualmente mesmo
5-> Alinhando os widgets ao centro da tela, para fazermos isso precisamos especificar na coluna o Alinhamento para ela
6-> Precisamos dizer que o mainAligment, ou alinhamento do eixo principal √© o eixo vertical...
import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
      title: "Contador de Pessoas",
      home: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Text(
            "Pessoa:0",
            style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
          ),
          Text(
            "Pode Entrar",
            style: TextStyle(color: Colors.white, fontStyle: FontStyle.italic,
                fontSize: 30.0),
          )
        ],
      )));
}
<- Adicionando FlatButtons ao nosso projeto ->
1-> Entre os texts adiciono o Flatbuton mais antes adiciono uma Linha(ROw)

3-> Adicionando Imagens ao projeto
4- criamos no diretorio contador pessoa uma pasta com nome images
5->falamos pro flutter que no images ele tem uma imagem que devemos utilizar, -> pubspecyam e declara sessao de  assets la onde fala de imagens e assets
assets:
    - images/restaurant.jpg
der pub get

Agora vamos utilizar o width stack para sobrepor um width encima do outro

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/painting.dart';

void main() {
  runApp(MaterialApp(
      title: "Contador de Pessoas",
      home:Home()
  ));
}


class Home extends StatefulWidget {
  @override
  _HomeState createState() => _HomeState();
}

class _HomeState extends State<Home> {
  int _people = 0;//inicalizo variavel mas nn quero que ninguem acesse ela de fora da classe
  String _lotadoOuNao="Pode entrar!";
  void _changePeople(int delta){
    setState(() {//informar que o que vai estar dentro dele Mudar√° de estado
      _people+=delta;
      if(_people>10){
        _lotadoOuNao="Lotado!";
      }
      else if(_people<0){
        _lotadoOuNao  ="invertido, Falencia?";
      }
      else{
        _lotadoOuNao  ="Pode entrar!";
      }
    });
  }
  @override
  Widget build(BuildContext context) {
    return Stack(
      children: <Widget>[
        Image.asset("images/restaurant.jpg",fit: BoxFit.cover,height: 1000.0,),
        Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              "Pessoa:$_people",
              style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                Padding(
                  padding: EdgeInsets.all(10.0),
                  child: FlatButton(child: Text("+1",style: TextStyle(fontSize: 40,color: Colors.white)),onPressed: (){
                    _changePeople(1);
                  },),
                ),
                Padding(
                  padding: EdgeInsets.all(10.0),
                  child: FlatButton(child: Text("-1",style: TextStyle(fontSize: 40,color: Colors.white)),onPressed: (){
                    _changePeople(-1);
                  },),
                ),
              ],
            ),
            Text(
              _lotadoOuNao,
              style: TextStyle(color: Colors.white, fontStyle: FontStyle.italic,
                  fontSize: 30.0),
            )
          ],
        )
      ],
    );


  }
}

